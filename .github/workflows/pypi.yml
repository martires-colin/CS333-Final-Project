# name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

# on: push

# jobs:
#   build-n-publish:
#     name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
#     runs-on: ubuntu-18.04
#     steps:
#     - uses: actions/checkout@master
#     - name: Set up Python 3.9
#       uses: actions/setup-python@v1
#       with:
#         python-version: 3.9
#     - name: Install pypa/build
#       run: >-
#         python -m
#         pip install
#         build
#         --user
#     - name: Build a binary wheel and a source tarball
#       run: >-
#         python -m
#         build
#         --sdist
#         --wheel
#         --outdir dist/
#         .
#     - name: Publish distribution 📦 to Test PyPI
#       uses: pypa/gh-action-pypi-publish@release/v1
#       with:
#         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#         repository_url: https://test.pypi.org/legacy/
#         skip_existing: true
#     - name: Publish distribution 📦 to PyPI
#       if: startsWith(github.ref, 'refs/tags')
#       uses: pypa/gh-action-pypi-publish@release/v1
#       with:
#         password: ${{ secrets.PYPI_PASSWORD }}0

# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: pypi

on:
  release:
    types: [push]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERS }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*